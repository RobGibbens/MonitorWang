<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Magnum.Routing</name>
    </assembly>
    <members>
        <member name="M:Magnum.Routing.Engine.Activation.Match``1">
            <summary>
            Used to inspect the condition network to find matching conditions
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="T:Magnum.Routing.Engine.Nodes.AlphaNode`1">
            <summary>
            An alpha node marks the end of a branch in the left side discrimination network
            and starts the journey into the right side join network
            </summary>
        </member>
        <member name="T:Magnum.Routing.Engine.Nodes.ConstantNode`1">
            <summary>
            A constant node is always activated and always invokes the callback on right activation
            </summary>
        </member>
        <member name="T:Magnum.Routing.Engine.Tokens">
            <summary>
            Used to pass tokens to the right in the RETE tree for use by the terminal nodes
            A join node may pass a new list to the right containing multiple tokens
            IE, a {controller}/{action} would join two segment alpha nodes and have a token
            list with a controller and an action token
            </summary>
        </member>
        <member name="T:Magnum.Routing.Engine.Nodes.SegmentNode`1">
            <summary>
            Matches a positional segment in the URI if it exists, and passes to the next condition
            </summary>
        </member>
        <member name="M:Magnum.Routing.RoutingEngine`1.Route(`0,System.Action{Magnum.Routing.RouteMatch{`0}})">
            <summary>
            Match a URI to the route defined in the routing engine
            </summary>
            <param name="context">The context to pass along with the routing request</param>
            <param name="matchCallback">Callback called if a matching route is found</param>
        </member>
    </members>
</doc>
